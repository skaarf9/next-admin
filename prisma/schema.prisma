// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户表
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  phone     String?    // 新增：电话号码
  avatar    String?    // 新增：头像URL
  bio       String?    // 新增：简介
  roles     UserRole[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 角色/权限表（如 admin、editor、viewer）
model Role {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  // 路由/功能权限
  permissions Permission[]
  users      UserRole[]
  pdfs       RolePDFPermission[]
  brands     BrandPermission[]
}

// 用户-角色多对多
model UserRole {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role @relation(fields: [roleId], references: [id])
  roleId Int
}

// 功能/路由权限表
model Permission {
  id    Int    @id @default(autoincrement())
  code  String @unique // 如 "dashboard:view", "product:edit"
  roles Role[]
}

// 产品PDF表
model ProductPDF {
  id             Int      @id @default(autoincrement())
  name           String
  pdfUrl         String
  pageCount      Int
  discountFactor Float
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  roles          RolePDFPermission[]
}

// 角色-产品PDF权限表
model RolePDFPermission {
  id          Int        @id @default(autoincrement())
  role        Role       @relation(fields: [roleId], references: [id])
  roleId      Int
  productPDF  ProductPDF @relation(fields: [productPDFId], references: [id])
  productPDFId Int
  canEdit     Boolean    @default(false)

  @@unique([roleId, productPDFId])
}

// 新增枚举类型：变更操作类型
enum ChangeType {
  CREATE
  UPDATE
  DELETE
}

// 产品定价历史表
model ProductPricingHistory {
  id                      Int       @id @default(autoincrement())
  
  // 关联原记录
  productPricingId        Int       @map("product_pricing_id")
  productPricing          ProductPricing @relation(fields: [productPricingId], references: [id])
  
  // 变更元数据
  changedAt               DateTime  @default(now()) @map("changed_at")
  changeType              ChangeType @map("change_type") // 变更类型: CREATE, UPDATE, DELETE
  changedBy               String?   @db.VarChar(255) @map("changed_by") // 操作人标识（用户名/ID）
  
  // 基础信息
  itemCode                String    @db.VarChar(50) @map("item_code")
  itemCodeBase            String    @db.VarChar(50) @map("item_code_base")
  category                String?   @db.VarChar(50)
  subCategory             String?   @db.VarChar(100) @map("sub_category")
  referenceImageUrl       String?   @db.Text @map("reference_image_url")
  location                String?   @db.Text
  brand                   String?   @db.VarChar(100)
  productName             String?   @db.Text @map("product_name")
  
  // 材料信息
  materialDescription     String?   @db.Text @map("material_description")
  materialImageUrl        String?   @db.Text @map("material_image_url")
  
  // 数量与备注
  quantity                Int       @default(1)
  comments                String?   @db.Text
  internalNote            String?   @db.Text @map("internal_note")
  
  // 价格信息
  listPriceEur            Decimal?  @db.Decimal(12, 2) @map("list_price_eur")
  listPriceUsd            Decimal?  @db.Decimal(12, 2) @map("list_price_usd")
  listPriceRmb            Decimal?  @db.Decimal(12, 2) @map("list_price_rmb")
  listPriceGbp            Decimal?  @db.Decimal(12, 2) @map("list_price_gbp")
  supplierDiscount        Decimal?  @db.Decimal(5, 3) @map("supplier_discount")
  costLocalCurrency       Decimal?  @db.Decimal(12, 2) @map("cost_local_currency")
  exchangeRate            Decimal?  @db.Decimal(10, 4) @map("exchange_rate")
  targetGp                Decimal?  @db.Decimal(5, 3) @map("target_gp")
  
  // 预算信息
  usdBudget1              Decimal?  @db.Decimal(12, 2) @map("usd_budget_1")
  kerryPrice              Decimal?  @db.Decimal(12, 2) @map("kerry_price")
  unitBudget              Decimal?  @db.Decimal(12, 2) @map("unit_budget")
  totalBudget             Decimal?  @db.Decimal(12, 2) @map("total_budget")
  
  // 系统字段
  createdAt               DateTime? @map("created_at") // 原记录的创建时间
  updatedAt               DateTime? @map("updated_at") // 原记录的更新时间
  
  // 备用字段
  spareText1              String?   @db.Text @map("spare_text_1")   // 备用文本字段1
  spareText2              String?   @db.Text @map("spare_text_2")   // 备用文本字段2
  spareText3              String?   @db.Text @map("spare_text_3")   // 备用文本字段3
  spareText4              String?   @db.Text @map("spare_text_4")   // 备用文本字段4
  spareText5              String?   @db.Text @map("spare_text_5")   // 备用文本字段5
  spareNumeric1           Decimal?    @db.Decimal(12, 2) @map("spare_numeric_1") // 备用数值字段
  spareNumeric2           Decimal?    @db.Decimal(12, 2) @map("spare_numeric_2") // 备用数值字段2
  spareNumeric3           Decimal?    @db.Decimal(12, 2) @map("spare_numeric_3") // 备用数值字段3
  spareNumeric4           Decimal?    @db.Decimal(12, 2) @map("spare_numeric_4") // 备用数值字段4
  spareBoolean            Boolean?  @default(false) @map("spare_boolean") // 备用布尔字段
  
  // 索引优化
  @@index([productPricingId])
  @@index([itemCode])
  @@index([changedAt])
  @@index([changeType])
  
  @@map("product_pricing_history")
}

// 新增产品定价表
model ProductPricing {
  id                      Int       @id @default(autoincrement())
  // 基础信息
  itemCode                String    @db.VarChar(50) @map("item_code")
  itemCodeBase            String    @db.VarChar(50) @map("item_code_base")
  category                String?   @db.VarChar(50)
  subCategory             String?   @db.VarChar(100) @map("sub_category")
  referenceImageUrl       String?   @db.Text @map("reference_image_url")
  location                String?   @db.Text
  brand                   String?   @db.VarChar(100)
  productName             String?   @db.Text @map("product_name")
  
  // 材料信息
  materialDescription     String?   @db.Text @map("material_description")
  materialImageUrl        String?   @db.Text @map("material_image_url")
  
  // 数量与备注
  quantity                Int       @default(1)
  comments                String?   @db.Text
  internalNote            String?   @db.Text @map("internal_note")
  
  // 价格信息 - 使用 Decimal 类型
  listPriceEur            Decimal?  @db.Decimal(12, 2) @map("list_price_eur")
  listPriceUsd            Decimal?  @db.Decimal(12, 2) @map("list_price_usd")
  listPriceRmb            Decimal?  @db.Decimal(12, 2) @map("list_price_rmb")
  listPriceGbp            Decimal?  @db.Decimal(12, 2) @map("list_price_gbp")
  supplierDiscount        Decimal?  @db.Decimal(5, 3) @map("supplier_discount")
  costLocalCurrency       Decimal?  @db.Decimal(12, 2) @map("cost_local_currency")
  exchangeRate            Decimal?  @db.Decimal(10, 4) @map("exchange_rate")
  targetGp                Decimal?  @db.Decimal(5, 3) @map("target_gp")
  
  // 预算信息
  usdBudget1              Decimal?  @db.Decimal(12, 2) @map("usd_budget_1")
  kerryPrice              Decimal?  @db.Decimal(12, 2) @map("kerry_price")
  unitBudget              Decimal?  @db.Decimal(12, 2) @map("unit_budget")
  totalBudget             Decimal?  @db.Decimal(12, 2) @map("total_budget")
  
  // 系统字段
  createdAt               DateTime  @default(now()) @map("created_at")
  updatedAt               DateTime  @updatedAt @map("updated_at")

  // 历史信息
  histories               ProductPricingHistory[]
  
  // 备用字段
  spareText1              String?   @db.Text @map("spare_text_1")   // 备用文本字段1
  spareText2              String?   @db.Text @map("spare_text_2")   // 备用文本字段2
  spareText3              String?   @db.Text @map("spare_text_3")   // 备用文本字段3
  spareText4              String?   @db.Text @map("spare_text_4")   // 备用文本字段4
  spareText5              String?   @db.Text @map("spare_text_5")   // 备用文本字段5
  spareNumeric1           Decimal?    @db.Decimal(12, 2) @map("spare_numeric_1") // 备用数值字段
  spareNumeric2           Decimal?    @db.Decimal(12, 2) @map("spare_numeric_2") // 备用数值字段2
  spareNumeric3           Decimal?    @db.Decimal(12, 2) @map("spare_numeric_3") // 备用数值字段3
  spareNumeric4           Decimal?    @db.Decimal(12, 2) @map("spare_numeric_4") // 备用数值字段4
  spareBoolean            Boolean?  @default(false) @map("spare_boolean") // 备用布尔字段
  
  // 索引优化
  @@index([itemCode])
  @@index([itemCodeBase])
  @@index([category])
  @@index([brand])
  
  @@map("product_pricing")
}

// 品牌表
model Brand {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  country   String
  discount  Int      @default(0)
  contact   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联权限表
  roles          BrandPermission[]
}

// 角色-品牌权限表
model BrandPermission {
  id          Int        @id @default(autoincrement())
  role        Role       @relation(fields: [roleId], references: [id])
  roleId      Int
  brand   Brand   @relation(fields: [brandId], references: [id])
  brandId Int
  canEdit     Boolean    @default(false)

  @@unique([roleId, brandId])
}

// 在现有schema末尾添加以下模型

// 项目状态枚举
enum ProjectStatus {
  PENDING    // 待开始
  IN_PROGRESS // 进行中
  COMPLETED   // 已完成
  PAUSED      // 暂停
}

// 区域状态枚举
enum RegionStatus {
  PENDING    // 待开始
  IN_PROGRESS // 进行中
  COMPLETED   // 已完成
  PAUSED      // 暂停
}

// 版本状态枚举
enum VersionStatus {
  DRAFT       // 草稿
  UPLOADED    // 已上传
  ARCHIVED    // 已归档
}


// 项目表
model Project {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(100)
  description String?       @db.Text
  status      ProjectStatus @default(PENDING)
  manager     String        @db.VarChar(50)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")

  // 关联区域
  regions     Region[]

  @@index([status])
  @@index([manager])
  @@map("projects")
}

// 区域表
model Region {
  id          Int          @id @default(autoincrement())
  projectId   Int          @map("project_id")
  name        String       @db.VarChar(100)
  description String?      @db.Text
  address     String?      @db.Text
  status      RegionStatus @default(PENDING)
  manager     String       @db.VarChar(50)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  // 关联项目
  project     Project      @relation(fields: [projectId], references: [id], onDelete: Cascade)

  // 关联版本
  versions    Version[]

  @@index([projectId])
  @@index([status])
  @@index([manager])
  @@map("regions")
}

// 版本表
model Version {
  id            Int           @id @default(autoincrement())
  regionId      Int           @map("region_id")
  version       String        @db.VarChar(20) // v1.0.0
  description   String?       @db.Text
  status        VersionStatus @default(DRAFT)
  creator       String        @db.VarChar(50)
  fileSize      String?       @db.VarChar(20) // 2.5MB
  fileUrl       String?       @db.Text
  downloadCount Int           @default(0) @map("download_count")
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")

  // 关联区域
  region        Region        @relation(fields: [regionId], references: [id], onDelete: Cascade)

  @@index([regionId])
  @@index([status])
  @@index([version])
  @@index([creator])
  @@map("versions")
}
